{"version":3,"sources":["components/SearchBar.jsx","components/CompletedNotification.jsx","components/SuccessNotification.jsx","components/NominationsMovieList.jsx","components/Nominations.jsx","components/MovieCards.jsx","components/SearchResults.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","input","marginLeft","spacing","flex","iconButton","fontSize","SearchBar","value","onChange","classes","FormControl","fullWidth","className","TextField","color","placeholder","type","InputProps","startAdornment","InputAdornment","position","CompletedNotification","isFiveNominations","React","useState","open","setOpen","useEffect","Box","Collapse","in","Alert","severity","variant","AlertTitle","Typography","align","SuccessNotification","isNominationSubmit","onClose","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","props","Slide","direction","NominationsMovieList","nominations","removeNomination","List","dense","Object","values","map","movie","ListItem","key","imdbID","ListItemAvatar","Avatar","Poster","src","alt","width","ListItemText","primary","Title","secondary","Year","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Nominations","handleResetNominations","setIsNominationSubmit","keys","length","Button","box","margin","height","image","img","maxWidth","maxHeight","details","noimg","background","MovieCards","movieData","addNomination","Grid","container","justify","isNominated","undefined","item","alignItems","style","grey","fontWeight","xs","sm","gutterBottom","component","toUpperCase","disabled","pagination","justifyContent","SearchResults","searchKey","isError","numResult","error","page","handlePageChange","role","Pagination","count","Math","ceil","createMuiTheme","palette","main","paper","App","setSearchKey","setMovieData","setNumResults","setPage","setIsError","setError","JSON","parse","localStorage","getItem","setNominations","setIsFiveNominations","apikey","onSetNomination","setItem","stringify","delayedQuery","useCallback","_","debounce","sendQuery","url","trim","fetch","method","then","response","json","result","Response","totalResults","data","Search","forEach","Error","ThemeProvider","flexDirection","p","md","Paper","newNomination","e","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a76b23bb.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  fontSize: {\n    fontSize: 38,\n  },\n}));\n\nexport function SearchBar({ value, onChange }) {\n  const classes = useStyles();\n\n  return (\n    <FormControl fullWidth className={classes.root}>\n      <TextField\n        color=\"primary\"\n        placeholder=\"Search Movies\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon fontSize=\"large\" />\n            </InputAdornment>\n          ),\n          classes: {\n            input: classes.fontSize,\n          },\n        }}\n      />\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { Box, Collapse, Typography } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { useEffect } from \"react\";\n\nexport function CompletedNotification({ isFiveNominations }) {\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    if (isFiveNominations) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  }, [isFiveNominations]);\n\n  return (\n    <Box>\n      <Collapse in={open}>\n        <Alert severity=\"info\" variant=\"filled\">\n          <AlertTitle>\n            <Typography align=\"left\">\n              <strong>All done!</strong>\n            </Typography>\n          </AlertTitle>\n          <Typography align=\"left\">You have selected 5 movies.</Typography>\n        </Alert>\n      </Collapse>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Snackbar, Typography, Slide } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nexport function SuccessNotification({ isNominationSubmit, onClose }) {\n  function SlideTransition(props) {\n    return <Slide {...props} direction=\"down\" />;\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    onClose();\n  };\n\n  return (\n    <Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={isNominationSubmit}\n        autoHideDuration={6000}\n        TransitionComponent={SlideTransition}\n        onClose={handleClose}\n      >\n        <Alert severity=\"success\" variant=\"filled\" onClose={handleClose}>\n          <AlertTitle>\n            <Typography align=\"left\">\n              <strong>Submission Success!</strong>\n            </Typography>\n          </AlertTitle>\n          <Typography align=\"left\">\n            Your nominations have been submited.\n          </Typography>\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Box,\n  IconButton,\n  Avatar,\n} from \"@material-ui/core\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nexport function NominationsMovieList({ nominations, removeNomination }) {\n  return (\n    <Box>\n      <List dense={true}>\n        {Object.values(nominations).map((movie) => (\n          <ListItem key={movie.imdbID}>\n            <ListItemAvatar>\n              <Avatar>\n                {movie.Poster === \"N/A\" ? (\n                  <MovieIcon />\n                ) : (\n                  <img src={movie.Poster} alt=\"movie poster\" width=\"100%\" />\n                )}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={movie.Title} secondary={movie.Year} />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"remove\"\n                onClick={() => removeNomination(movie.imdbID)}\n              >\n                <DeleteForeverIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { CompletedNotification } from \"./CompletedNotification\";\nimport { SuccessNotification } from \"./SuccessNotification\";\nimport { NominationsMovieList } from \"./NominationsMovieList\";\n\nexport function Nominations({\n  nominations,\n  removeNomination,\n  isFiveNominations,\n  handleResetNominations,\n}) {\n  const [isNominationSubmit, setIsNominationSubmit] = useState(false);\n\n  if (Object.keys(nominations).length === 0) {\n    return (\n      <Box>\n        <SuccessNotification\n          isNominationSubmit={isNominationSubmit}\n          onClose={() => setIsNominationSubmit(false)}\n        />\n        <img src=\"/the-shoppies/award.png\" alt=\"Movie Award\" width=\"70%\" />\n        <h3>No nominations yet! </h3>\n        <Typography>Select 5 of your favorite movies to the list.</Typography>\n      </Box>\n    );\n  } else {\n    return (\n      <Box>\n        <CompletedNotification isFiveNominations={isFiveNominations} />\n        <NominationsMovieList\n          nominations={nominations}\n          removeNomination={removeNomination}\n        />\n        {isFiveNominations && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setIsNominationSubmit(true);\n              handleResetNominations();\n            }}\n            aria-label=\"reset nominations\"\n          >\n            Submit\n          </Button>\n        )}\n      </Box>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Box, Grid, Typography } from \"@material-ui/core\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(1),\n    margin: \"auto\",\n    width: 210,\n    height: 400,\n  },\n  image: {\n    width: 200,\n    height: 280,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  details: {\n    width: 205,\n    height: 80,\n  },\n  noimg: {\n    background: \"#ECECEC\",\n    width: 200,\n    height: 280,\n  },\n}));\n\nexport function MovieCards({\n  movieData,\n  nominations,\n  addNomination,\n  isFiveNominations,\n}) {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"space-evenly\" spacing={2}>\n      {Object.values(movieData).map((movie) => {\n        const isNominated = nominations[movie.imdbID] !== undefined;\n        return (\n          <Grid item key={movie.imdbID}>\n            <Box className={classes.box}>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n              >\n                <Grid item className={classes.image}>\n                  {movie.Poster === \"N/A\" ? (\n                    <Grid\n                      container\n                      direction=\"column\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      className={classes.noimg}\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <MovieIcon\n                          fontSize=\"large\"\n                          style={{ color: grey[500] }}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Box fontWeight=\"Bold\" style={{ color: grey[500] }}>\n                          No Poster\n                          <br />\n                          Available\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  ) : (\n                    <img\n                      className={classes.img}\n                      src={movie.Poster}\n                      alt=\"movie poster\"\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item container direction=\"column\">\n                    <Grid className={classes.details} item>\n                      <Typography gutterBottom variant=\"subtitle2\">\n                        <Box component=\"span\" fontWeight=\"fontWeightBold\">\n                          {movie.Title.toUpperCase()}\n                        </Box>\n                        <br />({movie.Year})\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => addNomination(movie.imdbID)}\n                        disabled={isNominated || isFiveNominations}\n                        color=\"primary\"\n                      >\n                        {isNominated ? \"Nominated!\" : \"Nominate\"}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { MovieCards } from \"./MovieCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  pagination: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport function SearchResults({\n  searchKey,\n  isError,\n  error,\n  numResult,\n  addNomination,\n  movieData,\n  nominations,\n  page,\n  handlePageChange,\n  isFiveNominations,\n}) {\n  const classes = useStyles();\n  // display instruction that the search key needs to be longer than 2 characters\n  if (searchKey.length < 3) {\n    return (\n      <Box>\n        <h3>\n          <span role=\"img\" aria-label=\"find\">\n            🔍\n          </span>{\" \"}\n          Find a movie in the search bar above!\n        </h3>\n        <p>The keyword needs to be longer than 2 characters</p>\n      </Box>\n    );\n    // display search error\n  } else if (isError === true) {\n    return (\n      <Box>\n        <h3>\n          <span role=\"img\" aria-label=\"film\">\n            🎞️\n          </span>\n          {\"  \"}\n          No match for \"{searchKey}\" ({0})\n        </h3>\n        <p>\n          <span role=\"img\" aria-label=\"confused\">\n            😵\n          </span>{\" \"}\n          Check your spelling or try continue typing\n        </p>\n      </Box>\n    );\n    // display search results - button disabled if movie is nominated or have reached 5 nominations. pagination included\n  } else {\n    return (\n      <Box>\n        <h3>\n          <span role=\"img\" aria-label=\"film\">\n            🎞️\n          </span>{\" \"}\n          Results for \"{searchKey}\" ({numResult})\n        </h3>\n        <div>\n          <MovieCards\n            movieData={movieData}\n            nominations={nominations}\n            addNomination={addNomination}\n            isFiveNominations={isFiveNominations}\n          />\n        </div>\n        <Pagination\n          page={page}\n          onChange={handlePageChange}\n          count={Math.ceil(numResult / 10)}\n          className={classes.pagination}\n        />\n      </Box>\n    );\n  }\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Box, Grid, Paper } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { SearchBar } from \"./components/SearchBar\";\nimport { Nominations } from \"./components/Nominations\";\nimport { SearchResults } from \"./components/SearchResults\";\nimport { ApiSettingsButton } from \"./components/ApiSettingsButton\";\nimport { PositionedSnackbar } from \"./components/Snackbar\";\nimport _ from \"lodash\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#f2c144\",\n    },\n    secondary: {\n      main: \"#11cb5f\",\n    },\n    background: {\n      paper: \"#15161A\",\n    },\n  },\n});\n\nfunction App() {\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [movieData, setMovieData] = useState([]);\n  const [numResult, setNumResults] = useState(0);\n  const [page, setPage] = useState(1);\n  const [isError, setIsError] = useState(true);\n  const [error, setError] = useState(null);\n  const [nominations, setNominations] = useState(\n    JSON.parse(localStorage.getItem(\"nominations\") || \"{}\")\n  );\n  const [isFiveNominations, setIsFiveNominations] = useState(false);\n  // API Key is currently hard coded in\n  const [apikey, setApiKey] = useState(\n    localStorage.getItem(\"apikey\") || \"cbf06e88\"\n  );\n\n  // set api key and update in local storage\n  const onApiChange = (apikey) => {\n    setApiKey(apikey);\n    localStorage.setItem(\"apikey\", apikey);\n  };\n\n  // set nominations to local storage\n  const onSetNomination = (nominations) => {\n    setNominations(nominations);\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n  };\n\n  // Add movie from nominmation list\n  const addNomination = (imdbID) => {\n    if (Object.keys(nominations).length < 5) {\n      const newNomination = movieData[imdbID];\n      onSetNomination({ ...nominations, [imdbID]: newNomination });\n    }\n  };\n\n  // Remove movie from nominmation list\n  const removeNomination = (imdbID) => {\n    const newNomination = { ...nominations };\n    delete newNomination[imdbID];\n    onSetNomination(newNomination);\n  };\n\n  // when page number changes\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    sendQuery(searchKey, value);\n  };\n\n  // handle reset nomatinations - clear all nomaintions\n  const handleResetNominations = () => {\n    onSetNomination({});\n  };\n\n  // debounce - delay query to 200m to not over load the fetch\n  const delayedQuery = useCallback(\n    _.debounce((searchKey) => sendQuery(searchKey), 200),\n    []\n  );\n  const onSearchChange = (e) => {\n    setSearchKey(e.target.value);\n    delayedQuery(e.target.value);\n  };\n\n  // send query to fetch movie list if keyword search is longer than 2 characters\n  const sendQuery = (searchKey, page) => {\n    const url =\n      \"https://www.omdbapi.com/?apikey=\" +\n      apikey +\n      \"&s=\" +\n      searchKey.trim() +\n      \"&page=\" +\n      page +\n      \"&type=movie\";\n    if (searchKey.length > 2) {\n      fetch(url, {\n        method: \"GET\",\n      })\n        .then((response) => response.json())\n        .then(\n          (result) => {\n            if (result.Response === \"True\") {\n              setNumResults(result.totalResults);\n              const data = {};\n              result.Search.forEach((item) => {\n                data[item.imdbID] = item;\n              });\n              setMovieData(data);\n              setIsError(false);\n            } else {\n              setError(result.Error);\n              setIsError(true);\n            }\n          },\n          (error) => {\n            setIsError(true);\n            setError(error);\n          }\n        );\n    }\n  };\n\n  // when api key changes - run query again\n  useEffect(() => {\n    sendQuery(searchKey, page);\n  }, [apikey]);\n\n  // update if nominations num changes. if hits 5 show alert\n  useEffect(() => {\n    if (Object.keys(nominations).length === 5) {\n      setIsFiveNominations(true);\n    } else {\n      setIsFiveNominations(false);\n    }\n  }, [nominations]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        className=\"App\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"flex-start\"\n        p={3}\n      >\n        <Box p={2} className=\"Header\">\n          <img\n            src=\"/the-shoppies/shoppies_logo.png\"\n            alt=\"The Shoppies\"\n            width=\"70%\"\n          />\n        </Box>\n        {/* <Box\n          m={2}\n          className=\"API-settings\"\n          position=\"absolute\"\n          top={18}\n          right={18}\n        >\n          <ApiSettingsButton apikey={apikey} onApiChange={onApiChange} />\n        </Box> */}\n        <Box>\n          <Grid container direction=\"row-reverse\" spacing={3}>\n            <Grid item xs={12} sm={12} md={4}>\n              <Paper>\n                <Box p={2}>\n                  <h3>\n                    <span role=\"img\" aria-label=\"throphy\">\n                      🏆\n                    </span>{\" \"}\n                    Nominee ({5 - Object.keys(nominations).length} Remaining)\n                  </h3>\n                  <Nominations\n                    nominations={nominations}\n                    removeNomination={removeNomination}\n                    isFiveNominations={isFiveNominations}\n                    handleResetNominations={handleResetNominations}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={8}>\n              <Paper>\n                <Box p={2}>\n                  <SearchBar onChange={onSearchChange} value={searchKey} />\n                  <SearchResults\n                    searchKey={searchKey}\n                    isError={isError}\n                    error={error}\n                    numResult={numResult}\n                    addNomination={addNomination}\n                    movieData={movieData}\n                    nominations={nominations}\n                    page={page}\n                    handlePageChange={handlePageChange}\n                    isFiveNominations={isFiveNominations}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n        {/* <PositionedSnackbar isFiveNominations={isFiveNominations} /> */}\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}