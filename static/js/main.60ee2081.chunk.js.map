{"version":3,"sources":["components/SearchBar.jsx","components/ReachedFiveNotification.jsx","components/SubmittedNotification.jsx","components/NominationsMovieList.jsx","components/Nominations.jsx","components/SearchMovieCards.jsx","components/SearchMovieList.jsx","components/SearchResults.jsx","components/ViewCodeButton.jsx","App.jsx","api/OmdbAPI.js","serviceWorker.js","index.jsx"],"names":["useStyles","makeStyles","theme","root","padding","display","input","marginLeft","spacing","flex","iconButton","fontSize","SearchBar","value","onChange","classes","FormControl","fullWidth","className","TextField","color","placeholder","type","InputProps","startAdornment","InputAdornment","position","ReachedFiveNotification","show","Box","Collapse","in","Alert","severity","variant","AlertTitle","Typography","align","SubmittedNotification","isNominationSubmit","onClose","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","TransitionComponent","props","Slide","direction","NominationsMovieList","nominations","removeNomination","List","dense","Object","values","map","movie","ListItem","key","imdbID","ListItemAvatar","Avatar","Poster","src","alt","width","ListItemText","primary","Title","secondary","Year","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","img","maxWidth","Nominations","submitNominations","useState","setIsNominationSubmit","canSubmit","keys","length","Button","box","margin","height","image","maxHeight","details","noimg","background","MovieCards","movieData","addNomination","numNominations","Grid","container","justify","isNominated","undefined","item","alignItems","style","grey","fontWeight","xs","sm","gutterBottom","component","toUpperCase","disabled","MovieList","size","pagination","justifyContent","SearchResults","searchKey","isError","numResult","error","page","handlePageChange","role","Hidden","xsDown","smUp","Pagination","count","Math","ceil","ViewCodeButton","href","target","backgroundColor","top","header","createMuiTheme","palette","main","paper","App","setSearchKey","setMovieData","setNumResults","setPage","setIsError","setError","JSON","parse","localStorage","getItem","setNominations","onSetNomination","setItem","stringify","performSearch","url","trim","fetch","method","then","response","json","result","Response","data","totalResults","movies","Search","forEach","Promise","reject","Error","findMovies","results","catch","delayedQuery","useCallback","_","debounce","ThemeProvider","flexDirection","textAlign","p","m","right","md","Paper","newNomination","e","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.60ee2081.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  fontSize: {\n    fontSize: 38,\n  },\n}));\n\nexport function SearchBar({ value, onChange }) {\n  const classes = useStyles();\n\n  return (\n    <FormControl fullWidth className={classes.root}>\n      <TextField\n        color=\"primary\"\n        placeholder=\"Search Movies\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon fontSize=\"large\" />\n            </InputAdornment>\n          ),\n          classes: {\n            input: classes.fontSize,\n          },\n        }}\n      />\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { Box, Collapse, Typography } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nexport function ReachedFiveNotification({ show }) {\n  return (\n    <Box>\n      <Collapse in={show}>\n        <Alert severity=\"info\" variant=\"filled\">\n          <AlertTitle>\n            <Typography align=\"left\">\n              <strong>All done!</strong>\n            </Typography>\n          </AlertTitle>\n          <Typography align=\"left\">You have selected 5 movies.</Typography>\n        </Alert>\n      </Collapse>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Snackbar, Typography, Slide } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nconst SIX_SECONDS = 6000;\n\nexport function SubmittedNotification({ isNominationSubmit, onClose }) {\n  function SlideTransition(props) {\n    return <Slide {...props} direction=\"down\" />;\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    onClose();\n  };\n\n  return (\n    <Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={isNominationSubmit}\n        autoHideDuration={SIX_SECONDS}\n        TransitionComponent={SlideTransition}\n        onClose={handleClose}\n      >\n        <Alert severity=\"success\" variant=\"filled\" onClose={handleClose}>\n          <AlertTitle>\n            <Typography align=\"left\">\n              <strong>Submission Success!</strong>\n            </Typography>\n          </AlertTitle>\n          <Typography align=\"left\">\n            Your nominations have been submitted.\n          </Typography>\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Box,\n  IconButton,\n  Avatar,\n} from \"@material-ui/core\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nexport function NominationsMovieList({ nominations, removeNomination }) {\n  return (\n    <Box>\n      <List dense={true}>\n        {Object.values(nominations).map((movie) => (\n          <ListItem key={movie.imdbID}>\n            <ListItemAvatar>\n              <Avatar>\n                {movie.Poster === \"N/A\" ? (\n                  <MovieIcon />\n                ) : (\n                  <img src={movie.Poster} alt=\"movie poster\" width=\"100%\" />\n                )}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={movie.Title} secondary={movie.Year} />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"remove\"\n                onClick={() => removeNomination(movie.imdbID)}\n              >\n                <DeleteForeverIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button, Typography, makeStyles } from \"@material-ui/core\";\n\nimport { ReachedFiveNotification } from \"./ReachedFiveNotification\";\nimport { SubmittedNotification } from \"./SubmittedNotification\";\nimport { NominationsMovieList } from \"./NominationsMovieList\";\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    maxWidth: 280,\n  },\n}));\n\nexport function Nominations({\n  nominations,\n  removeNomination,\n  submitNominations,\n}) {\n  const classes = useStyles();\n  const [isNominationSubmit, setIsNominationSubmit] = useState(false);\n  const canSubmit = Object.keys(nominations).length === 5;\n\n  if (Object.keys(nominations).length === 0) {\n    return (\n      <Box>\n        <SubmittedNotification\n          isNominationSubmit={isNominationSubmit}\n          onClose={() => setIsNominationSubmit(false)}\n        />\n        <img\n          src=\"/the-shoppies/award.png\"\n          alt=\"Movie Award\"\n          className={classes.img}\n          width=\"70%\"\n        />\n        <h3>No nominations yet! </h3>\n        <Typography>Add 5 of your favorite movies to the list.</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <ReachedFiveNotification show={canSubmit} />\n\n      <NominationsMovieList\n        nominations={nominations}\n        removeNomination={removeNomination}\n      />\n\n      {canSubmit && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setIsNominationSubmit(true);\n            submitNominations();\n          }}\n          aria-label=\"submit nominations\"\n        >\n          Submit\n        </Button>\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Button, Box, Grid, Typography } from \"@material-ui/core\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(1),\n    margin: \"auto\",\n    width: 210,\n    height: 400,\n  },\n  image: {\n    width: 200,\n    height: 280,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  details: {\n    width: 205,\n    height: 80,\n  },\n  noimg: {\n    background: \"#ECECEC\",\n    width: 200,\n    height: 280,\n  },\n}));\n\nexport function MovieCards({ movieData, nominations, addNomination }) {\n  const classes = useStyles();\n  const numNominations = Object.keys(nominations).length;\n\n  return (\n    <Grid container justify=\"space-evenly\" spacing={2}>\n      {Object.values(movieData).map((movie) => {\n        const isNominated = nominations[movie.imdbID] !== undefined;\n        return (\n          <Grid item key={movie.imdbID}>\n            <Box className={classes.box}>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n              >\n                <Grid item className={classes.image}>\n                  {movie.Poster === \"N/A\" ? (\n                    <Grid\n                      container\n                      direction=\"column\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      className={classes.noimg}\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <MovieIcon\n                          fontSize=\"large\"\n                          style={{ color: grey[500] }}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Box fontWeight=\"Bold\" style={{ color: grey[500] }}>\n                          No Poster\n                          <br />\n                          Available\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  ) : (\n                    <img\n                      className={classes.img}\n                      src={movie.Poster}\n                      alt=\"movie poster\"\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item container direction=\"column\">\n                    <Grid className={classes.details} item>\n                      <Typography gutterBottom variant=\"subtitle2\">\n                        <Box component=\"span\" fontWeight=\"fontWeightBold\">\n                          {movie.Title.toUpperCase()}\n                        </Box>\n                        <br />({movie.Year})\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => addNomination(movie.imdbID)}\n                        disabled={isNominated || numNominations === 5}\n                        color=\"primary\"\n                      >\n                        {isNominated ? \"Nominated!\" : \"Nominate\"}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Box,\n  Button,\n  Avatar,\n} from \"@material-ui/core\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\n\nexport function MovieList({ movieData, nominations, addNomination }) {\n  const numNominations = Object.keys(nominations).length;\n\n  return (\n    <Box>\n      <List dense={true}>\n        {Object.values(movieData).map((movie) => {\n          const isNominated = nominations[movie.imdbID] !== undefined;\n          return (\n            <ListItem key={movie.imdbID}>\n              <ListItemAvatar>\n                <Avatar>\n                  {movie.Poster === \"N/A\" ? (\n                    <MovieIcon />\n                  ) : (\n                    <img src={movie.Poster} alt=\"movie poster\" width=\"100%\" />\n                  )}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={movie.Title} secondary={movie.Year} />\n              <ListItemSecondaryAction>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => addNomination(movie.imdbID)}\n                  disabled={isNominated || numNominations === 5}\n                  color=\"primary\"\n                  size=\"small\"\n                  edge=\"end\"\n                >\n                  {isNominated ? \"Nominated!\" : \"Nominate\"}\n                </Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Hidden } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport { MovieCards } from \"./SearchMovieCards\";\nimport { MovieList } from \"./SearchMovieList\";\n\nconst useStyles = makeStyles((theme) => ({\n  pagination: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport function SearchResults({\n  searchKey,\n  isError,\n  error,\n  numResult,\n  addNomination,\n  movieData,\n  nominations,\n  page,\n  handlePageChange,\n}) {\n  const classes = useStyles();\n\n  if (searchKey.length < 3) {\n    return (\n      <Box>\n        <h3>\n          <span role=\"img\" aria-label=\"find\">\n            🔍\n          </span>{\" \"}\n          Find a movie in the search bar above!\n        </h3>\n        <p>The keyword needs to be longer than 2 characters</p>\n      </Box>\n    );\n  }\n\n  if (isError) {\n    return (\n      <Box>\n        <h3>\n          <span role=\"img\" aria-label=\"film\">\n            🎞️\n          </span>\n          {\"  \"}\n          No match for \"{searchKey}\" ({0})\n        </h3>\n        <p>\n          <span role=\"img\" aria-label=\"confused\">\n            😵\n          </span>{\" \"}\n          Check your spelling or try continue typing\n        </p>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <h3>\n        <span role=\"img\" aria-label=\"film\">\n          🎞️\n        </span>{\" \"}\n        Results for \"{searchKey}\" ({numResult})\n      </h3>\n      <Hidden xsDown>\n        <MovieCards\n          movieData={movieData}\n          nominations={nominations}\n          addNomination={addNomination}\n        />\n      </Hidden>\n      <Hidden smUp>\n        <MovieList\n          movieData={movieData}\n          nominations={nominations}\n          addNomination={addNomination}\n        />\n      </Hidden>\n\n      <Pagination\n        page={page}\n        onChange={handlePageChange}\n        count={Math.ceil(numResult / 10)}\n        className={classes.pagination}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { IconButton } from \"@material-ui/core\";\n\nexport function ViewCodeButton() {\n  return (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"view source code\"\n      href=\"https://github.com/nancyyeh/the-shoppies\"\n      target=\"_blank\"\n    >\n      <GitHubIcon />\n    </IconButton>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Box, Grid, Paper, makeStyles } from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nimport { SearchBar } from \"./components/SearchBar\";\nimport { Nominations } from \"./components/Nominations\";\nimport { SearchResults } from \"./components/SearchResults\";\nimport { ViewCodeButton } from \"./components/ViewCodeButton\";\nimport { findMovies } from \"./api/OmdbAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#131316\",\n    height: \"100vh\",\n    maxHeight: 1,\n  },\n  nominations: {\n    position: \"sticky\",\n    top: 20,\n  },\n  header: {\n    color: \"#f2c144\",\n    fontSize: 96,\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#f2c144\",\n    },\n    secondary: {\n      main: \"#11cb5f\",\n    },\n    background: {\n      paper: \"#15161A\",\n    },\n  },\n});\n\nfunction App() {\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [movieData, setMovieData] = useState([]);\n  const [numResult, setNumResults] = useState(0);\n  const [page, setPage] = useState(1);\n  const [isError, setIsError] = useState(true);\n  const [error, setError] = useState(null);\n  const [nominations, setNominations] = useState(\n    JSON.parse(localStorage.getItem(\"nominations\") || \"{}\")\n  );\n\n  const classes = useStyles();\n\n  // set nominations to local storage\n  const onSetNomination = (nominations) => {\n    setNominations(nominations);\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n  };\n\n  // Add movie from nominmation list\n  const addNomination = (imdbID) => {\n    const newNomination = movieData[imdbID];\n    onSetNomination({ ...nominations, [imdbID]: newNomination });\n  };\n\n  // Remove movie from nominmation list\n  const removeNomination = (imdbID) => {\n    const newNomination = { ...nominations };\n    delete newNomination[imdbID];\n    onSetNomination(newNomination);\n  };\n\n  // handle submit nomatinations - clear all nomaintions and clear search key\n  const submitNominations = () => {\n    onSetNomination({});\n    setSearchKey(\"\");\n  };\n\n  // update search value\n  const onSearchChange = (e) => {\n    const searchKey = e.target.value;\n    setSearchKey(searchKey);\n    delayedQuery(searchKey);\n  };\n\n  // perform the search and catch error\n  const performSearch = (searchKey, page) => {\n    // if (searchKey.length > 2) {\n    findMovies(searchKey, page)\n      .then((results) => {\n        setNumResults(results.totalResults);\n        setMovieData(results.movies);\n        setIsError(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setIsError(true);\n      });\n    // }\n  };\n\n  // when page number changes\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    performSearch(searchKey, value);\n  };\n\n  // debounce - delay query to 200ms to not over load the fetch\n  const delayedQuery = useCallback(\n    _.debounce((searchKey) => performSearch(searchKey), 200),\n    []\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        className={classes.root}\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"flex-start\"\n        textAlign=\"center\"\n        p={3}\n      >\n        <Box p={2} className={classes.header}>\n          <img\n            src=\"/the-shoppies/shoppies_logo.png\"\n            alt=\"The Shoppies\"\n            width=\"70%\"\n          />\n        </Box>\n        <Box\n          m={2}\n          className=\"API-settings\"\n          position=\"absolute\"\n          top={18}\n          right={18}\n        >\n          <ViewCodeButton />\n        </Box>\n        <Box>\n          <Grid container direction=\"row-reverse\" spacing={3}>\n            <Grid item xs={12} sm={12} md={4}>\n              <Paper className={classes.nominations}>\n                <Box p={2}>\n                  <h3>\n                    <span role=\"img\" aria-label=\"throphy\">\n                      🏆\n                    </span>{\" \"}\n                    Nominee ({5 - Object.keys(nominations).length} Remaining)\n                  </h3>\n                  <Nominations\n                    nominations={nominations}\n                    removeNomination={removeNomination}\n                    submitNominations={submitNominations}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={8}>\n              <Paper>\n                <Box p={2}>\n                  <SearchBar onChange={onSearchChange} value={searchKey} />\n\n                  <SearchResults\n                    searchKey={searchKey}\n                    isError={isError}\n                    error={error}\n                    numResult={numResult}\n                    addNomination={addNomination}\n                    movieData={movieData}\n                    nominations={nominations}\n                    page={page}\n                    handlePageChange={handlePageChange}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","export function findMovies(searchKey, page) {\n  const url = `https://www.omdbapi.com/?apikey=cbf06e88&s=${searchKey.trim()}&page=${page}&type=movie`;\n\n  return fetch(url, {\n    method: \"GET\",\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      if (result.Response === \"True\") {\n        const data = {\n          totalResults: result.totalResults,\n          movies: {},\n        };\n        result.Search.forEach((item) => {\n          data.movies[item.imdbID] = item;\n        });\n\n        return data;\n      } else {\n        return Promise.reject(result.Error);\n      }\n    });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}